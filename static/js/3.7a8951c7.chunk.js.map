{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","className","style","item","to","id","name","Message","message","text","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","arrayItemData","messagesPage","dialogsData","map","element","arrayMessageData","messagesText","dialogs","items","messages","e","sendMessage","newMessageText","compose","connect","state","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,KAAO,2B,oBCAzBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,SAAW,4B,6JCWhFC,EANI,SAACC,GAClB,OACE,qBAAKC,UAAWC,IAAMC,KAAtB,SAA4B,cAAC,IAAD,CAASC,GAAE,mBAAcJ,EAAMK,IAA/B,SAAsCL,EAAMM,U,oCCG7DC,EANC,SAACP,GACf,OACE,qBAAKC,UAAWC,IAAMM,QAAtB,SAAgCR,EAAMS,QCCpCC,EAAeC,YAAiB,KAsChCC,EAAsBC,YAAU,CAACC,KAAK,kBAAhBD,EAZL,SAACb,GACtB,OACE,uBAAMe,SAAUf,EAAMgB,aAAtB,UACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACZC,SAAU,CAAEC,IAAUX,GACtBJ,KAAK,iBACLgB,YAAY,sGAClB,wDAOSC,EAtCC,SAACvB,GACf,IAAIwB,EACFxB,EAAMyB,aAAaC,YAAYC,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,CAA6BvB,GAAIuB,EAAQvB,GAAIC,KAAMsB,EAAQtB,MAA1CsB,EAAQvB,OAErEwB,EACF7B,EAAMyB,aAAaK,aAAaH,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,CAA0BnB,KAAMmB,EAAQnB,MAA1BmB,EAAQvB,OAMvE,OACE,sBAAKJ,UAAWC,IAAM6B,QAAtB,UACE,qBAAK9B,UAAWC,IAAM8B,MAAtB,SACIR,IAEJ,sBAAKvB,UAAWC,IAAM+B,SAAtB,UACIJ,EACF,cAACjB,EAAD,CAAqBG,SAXP,SAACmB,GACnBlC,EAAMmC,YAAYD,EAAEE,0B,gBCNTC,sBACbC,aANoB,SAACC,GAAD,MAAY,CAC9Bd,aAAcc,EAAMd,gBAKG,CAACU,kBAC1BK,IAFaH,CAGbd","file":"static/js/3.7a8951c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__Ss7Bv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__obMNq\",\"items\":\"Dialogs_items__2tdp8\",\"messages\":\"Dialogs_messages__DQV_D\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './DialogItem.module.css';\r\n\r\n\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={style.item}><NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink></div>\r\n  );\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport style from './Message.module.css';\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={style.message}>{props.text}</div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport style from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst Dialogs = (props) => {\r\n  let arrayItemData = \r\n    props.messagesPage.dialogsData.map(element => <DialogItem key={element.id} id={element.id} name={element.name} />);\r\n  \r\n  let arrayMessageData = \r\n    props.messagesPage.messagesText.map(element => <Message key={element.id} text={element.text} />);\r\n\r\n  let addNewMessage = (e) => {\r\n    props.sendMessage(e.newMessageText);\r\n  }\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div className={style.items}>\r\n        { arrayItemData }\r\n      </div>\r\n      <div className={style.messages}>\r\n        { arrayMessageData }\r\n        <AddMessageReduxForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}> \r\n      <Field component={Textarea} \r\n            validate={[ required, maxLength100 ]} \r\n            name='newMessageText' \r\n            placeholder='Введите сообщение' />\r\n      <button>Send message</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form:'addMessageForm'})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","\r\nimport { connect } from 'react-redux';\r\nimport { sendMessage } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => ({\r\n    messagesPage: state.messagesPage\r\n});\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {sendMessage}),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}